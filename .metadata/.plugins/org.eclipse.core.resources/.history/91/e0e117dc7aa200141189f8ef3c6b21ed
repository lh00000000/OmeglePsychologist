package rewrite;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

import org.nikki.omegle.Omegle;
import org.nikki.omegle.core.OmegleException;
import org.nikki.omegle.core.OmegleMode;
import org.nikki.omegle.core.OmegleSession;
import org.nikki.omegle.event.OmegleEventAdaptor;

import codeanticode.eliza.Eliza;
import processing.core.PApplet;


public class Rewrite extends PApplet {
	Eliza eliza = new Eliza(this);
	Omegle omegle = new Omegle();
	String lastMessageReceived = "";
	OmegleSession session;
	
	public void setup() {
		String s = "";
		Boolean nevermind = false;
		while (nevermind) {
		 BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	        System.out.print("Enter String");
	        try {
				s = br.readLine();
			} catch (IOException e) {
				
				e.printStackTrace();
			}
	        println(eliza.processInput(s));
		}
		
		try {
			System.out.println("Opening session...");
			
			session = omegle.openSession(OmegleMode.NORMAL, new OmegleEventAdaptor() {
				@Override
				public void chatWaiting(OmegleSession session) {
					System.out.println("Waiting for chat...");
				}

				@Override
				public void chatConnected(OmegleSession session) {
					System.out
							.println("You are now talking to a random stranger!");
				}

				@Override
				public void chatMessage(OmegleSession session, String message) {
					System.out.println("Stranger: " + message);
					lastMessageReceived = message;
				}

				@Override
				public void messageSent(OmegleSession session, String string) {
					System.out.println("You: " + string);
				}

				@Override
				public void strangerDisconnected(OmegleSession session) {
					System.out.println("Stranger disconnected, goodbye!");
					System.exit(0);
				}

				@Override
				public void omegleError(OmegleSession session, String string) {
					System.out.println("ERROR! " + string);
					System.exit(1);
				}
			});

			
		} catch (OmegleException e) {
			e.printStackTrace();
		}
	}

	public void draw() {
		
		BufferedReader reader = new BufferedReader(new InputStreamReader(
				System.in));
		while (true) {
			String line = reader.readLine();
			if (line == null) {
				break;
			}
			if (line.equals("quit")) {
				session.disconnect();
			} else {
				// Send the message in non-blocking mode
				session.send(eliza.processInput(lastMessageReceived), true);
			}
		}
	}
	
	public static void main(String _args[]) {
		PApplet.main(new String[] { rewrite.Rewrite.class.getName() });
	}
}
